<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:metrics="http://www.mulesoft.org/schema/mule/metrics"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/metrics http://www.mulesoft.org/schema/mule/metrics/current/mule-metrics.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

	<spring:beans>
		<spring:import resource="classpath:services-common.xml" />
		<spring:import resource="classpath:metrics.xml" />
	</spring:beans>

	<spring:beans>
		<spring:bean id="ExceptionTransformer" name="ExceptionTransformer" class="com.l1p.interop.L1PExceptionTransformer" />
	</spring:beans>

    <http:request-config name="mock-central-directory-http-config" host="${mock-central-dir.host}"
                         port="${mock-central-dir.port}" doc:name="HTTP Request Configuration">
        <!-- <http:raml-api-configuration location="central-directory-api.raml" /> -->
    </http:request-config>
	<http:request-config name="central-directory-http-config" host="${central-dir-host}"
		port="${central-dir-api.port}" doc:name="HTTP Request Configuration">
		<!-- <http:raml-api-configuration location="central-directory-api.raml" /> -->
	</http:request-config>

	<http:request-config name="central-fraud-sharing-http-config" host="${central-fraud-sharing-host}"
		port="${central-fraud-sharing-api.port}" doc:name="HTTP Request Configuration">
	</http:request-config>

	<sub-flow name="common-flow">
		<!-- <custom-transformer class="com.l1p.interop.ilp.ledger.BasicAuthCredentialsTransformer" doc:name="Basic 
			Auth Transformer"/> -->
		<set-session-variable variableName="L1p-Trace-Id"
			value="#[(message.inboundProperties.'L1p-Trace-Id' == null) ? java.util.UUID.randomUUID() : message.inboundProperties.'L1p-Trace-Id']"
			doc:name="set-L1p-Trace-Id" />
		<logger level="INFO"
			message="Received request with L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'] at path=#[message.inboundProperties.'http.request.path'], method=#[message.inboundProperties.'http.method'], Content-Type=#[message.inboundProperties.'Content-Type']"
			category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger" />
		<object-to-string-transformer doc:name="Object to String" />
	</sub-flow>

	<flow name="get:/health:central-directory-api-config">
		<set-payload value="{ &quot;status&quot; : &quot;ok&quot; }" doc:name="Set Payload"
			mimeType="application/json" />
		<exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy" />
	</flow>

	<flow name="get:/:central-directory-api-config">
		<http:listener config-ref="api-httpListenerConfig" path="${central-dir-gateway-service.basePath}/"
			allowedMethods="GET" doc:name="HTTP" />
		<flow-ref name="common-flow" doc:name="common-flow" />
		<logger level="INFO"
			message="Sending request for central-directory-api get:/:central-directory-api-config, L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
			category="com.l1p.interop.dfsp.directory.metadata" doc:name="logger" />
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get-metadata.start"
			doc:name="SnapTime" />
		<http:request config-ref="central-directory-http-config" path="/" method="GET"
			doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
			</http:request-builder>
			<http:success-status-code-validator values="200..599" />
		</http:request>
		<json:object-to-json-transformer doc:name="Object to JSON" />
		<set-property propertyName="http.status" value="#[message.inboundProperties.'http.status']"
			doc:name="Property" />
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get-metadata.stop"
			doc:name="SnapTime" />
		<metrics:time config-ref="metricsConfig" beginSnapKey="get-metadata.start"
			endSnapKey="get-metadata.stop" category="l1p.dfsp.directory.api" metricKey="GetMetaDataTime"
			doc:name="Metrics Record" />
		<logger level="INFO"
			message="Returning call for get:/:central-directory-api-config, L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'] response: #[payload]"
			category="com.l1p.interop.dfsp.directory.metadata" doc:name="logger" />
		<exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy" />
	</flow>

	<flow name="post:/commands/register:application/json:central-directory-api-config">
		<http:listener config-ref="api-httpListenerConfig"
			path="${central-dir-gateway-service.basePath}/commands/register" allowedMethods="POST" doc:name="HTTP" />
		<flow-ref name="common-flow" doc:name="common-flow" />
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="register-dfsp.start"
			doc:name="SnapTime" />
		<choice>
			<when expression="#['${central-dir-env}' == 'mock']">
                <logger level="INFO"
                        message="Sending request to http://localhost:8088/mock/directory/v1/commands/register method:post"
                        category="com.l1p.interop.dfsp.directory.register" doc:name="logger" />
                <http:request config-ref="mock-central-directory-http-config" path="mock/directory/v1/commands/register"
							  method="POST" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
						<http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
					</http:request-builder>
					<http:success-status-code-validator values="200..599" />
				</http:request>
			</when>
			<otherwise>
                <logger level="INFO"
                        message="Sending request to http://${central-dir-host}:${central-dir-api.port}/commands/register method:post"
                        category="com.l1p.interop.dfsp.directory.register" doc:name="logger" />
                <http:request config-ref="central-directory-http-config" path="/commands/register"
							  method="POST" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
						<http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
					</http:request-builder>
					<http:success-status-code-validator values="200..599" />
				</http:request>
			</otherwise>
		</choice>

		<set-property propertyName="http.status" value="#[message.inboundProperties.'http.status']"
			doc:name="Property" />
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="register-dfsp.stop"
			doc:name="SnapTime" />
		<metrics:time config-ref="metricsConfig" beginSnapKey="register-dfsp.start"
			endSnapKey="register-dfsp.stop" category="l1p.dfsp.directory.api" metricKey="RegisterDfspTime"
			doc:name="Metrics Record" />
		<set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
		<logger level="INFO"
			message="Response from /commands/register L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'] Response: #[message.payloadAs(java.lang.String)]"
			category="com.l1p.interop.dfsp.directory.resgister" doc:name="logger" />
		<exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy" />
	</flow>

	<flow name="get:/identifier-types:central-directory-api-config">
		<http:listener config-ref="api-httpListenerConfig" path="${central-dir-gateway-service.basePath}/identifier"
			allowedMethods="GET" doc:name="HTTP" />
		<flow-ref name="common-flow" doc:name="common-flow" />
		<logger level="INFO"
			message="Processing request for get:/identifier-types:central-directory-api-config, L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id']"
			category="com.l1p.interop.dfsp.directory.identifier-types" doc:name="logger" />
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get-identifier-types.start"
			doc:name="SnapTime" />
		<http:request config-ref="central-directory-http-config" path="/identifier-types"
			method="GET" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
				<http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
			</http:request-builder>
			<http:success-status-code-validator values="200..599" />
		</http:request>
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get-identifier-types.stop"
			doc:name="SnapTime" />
		<metrics:time config-ref="metricsConfig" beginSnapKey="get-identifier-types.start"
			endSnapKey="get-identifier-types.stop" category="l1p.dfsp.directory.api" metricKey="GetIdentifierTypesTime"
			doc:name="Metrics Record" />
		<set-property propertyName="http.status" value="#[message.inboundProperties.'http.status']"
			doc:name="Property" />
		<logger level="INFO"
			message="Returning response for get:/identifier-types:central-directory-api-config, L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'] Response: #[payload]"
			category="com.l1p.interop.dfsp.directory.identifier-types" doc:name="logger" />
		<exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy" />
	</flow>

    <flow name="post:/resources:application/json:central-directory-api-config">
        <http:listener config-ref="api-httpListenerConfig" path="${central-dir-gateway-service.basePath}/resources"
                       allowedMethods="POST" doc:name="HTTP" />
        <flow-ref name="common-flow" doc:name="common-flow" />
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="post-resources.start"
                           doc:name="SnapTime" />
        <choice>
            <when expression="#['${central-dir-env}' == 'mock']">
                <logger level="INFO"
                        message="Sending request to http://localhost:8088/mock/directory/v1/resources method:post payload: #[message.payloadAs(java.lang.String)]"
                        category="com.l1p.interop.dfsp.directory.register" doc:name="logger" />
                <http:request config-ref="mock-central-directory-http-config" path="/mock/directory/v1/resources" method="POST"
                              doc:name="HTTP">
                    <http:request-builder>
                        <http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
                        <http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
                    </http:request-builder>
                    <http:success-status-code-validator values="200..599" />
                </http:request>
            </when>
            <otherwise>
                <logger level="INFO"
                        message="Sending request to http://${central-dir-host}:${central-dir-api.port}/resources method:post payload: #[message.payloadAs(java.lang.String)]"
                        category="com.l1p.interop.dfsp.directory.register" doc:name="logger" />
                <http:request config-ref="central-directory-http-config" path="/resources" method="POST"
                              doc:name="HTTP">
                    <http:request-builder>
                        <http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
                        <http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
                    </http:request-builder>
                    <http:success-status-code-validator values="200..599" />
                </http:request>
            </otherwise>
        </choice>

        <logger level="INFO" message="Reponse from /resources: #[message.payloadAs(java.lang.String)] "
                category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
        <set-property propertyName="http.status" value="#[message.inboundProperties.'http.status']"
                      doc:name="Property" />
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="post-resources.stop"
                           doc:name="SnapTime" />
        <metrics:time config-ref="metricsConfig" beginSnapKey="post-resources.start"
                      endSnapKey="post-resources.stop" category="l1p.dfsp.directory.api" metricKey="PostResourcesTime"
                      doc:name="Metrics Record" />
        <logger level="INFO" message="Response from /resources #[message.payloadAs(java.lang.String)]"
                category="com.l1p.interop.dfsp.directory.resources" doc:name="logger" />
        <exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy" />
    </flow>

	<flow name="get:/resources:central-directory-api-config">
		<http:listener config-ref="api-httpListenerConfig" path="${central-dir-gateway-service.basePath}/resources"
			allowedMethods="GET" doc:name="HTTP" />
		<flow-ref name="common-flow" doc:name="common-flow" />
		<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.interop-resources.start" doc:name="SnapTime"/>
		<set-session-variable variableName="finalResponseMap" value="#[new java.util.HashMap()]"
			doc:name="Save Final Response as a map" />
        <set-session-variable variableName="identifierType"
                              value="#[message.inboundProperties.'http.query.params'.identifier.substring(0,3)]" doc:name="Save identifier type" />
        <set-session-variable variableName="receiverID"
                              value="#[message.inboundProperties.'http.query.params'.identifier.substring(4)]" doc:name="Save identifier" />
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.central-dir-resources.start" doc:name="SnapTime"/>
        <choice>
            <when expression="#['${central-dir-env}' == 'mock']">
                <logger level="INFO"
                        message="Sending request to http://localhost:8088/mock/directory/v1/resources with query parameters-  identifier: #[message.inboundProperties.'http.query.params'.identifier]; "
                        category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
                <http:request config-ref="mock-central-directory-http-config" path="/mock/directory/v1/resources" method="GET"
                              doc:name="HTTP">
                    <http:request-builder>
                        <http:query-param paramName="identifier"
                                          value="#[message.inboundProperties.'http.query.params'.identifier]" />
                        <http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
                        <http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
                    </http:request-builder>
                    <http:success-status-code-validator values="200..599" />
                </http:request>
            </when>
            <otherwise>
                <logger level="INFO"
                        message="Sending request to http://${central-dir-host}:${central-dir-api.port}/resources with query parameters-  identifier: #[message.inboundProperties.'http.query.params'.identifier]; "
                        category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
                <http:request config-ref="central-directory-http-config" path="/resources" method="GET"
                              doc:name="HTTP">
                    <http:request-builder>
                        <http:query-param paramName="identifier"
                                          value="#[message.inboundProperties.'http.query.params'.identifier]" />
                        <http:header headerName="Authorization" value="#[message.inboundProperties.authorization]" />
                        <http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
                    </http:request-builder>
                    <http:success-status-code-validator values="200..599" />
                </http:request>

            </otherwise>
        </choice>
        <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.central-dir-resources.stop" doc:name="SnapTime"/>
		<metrics:time config-ref="metricsConfig" beginSnapKey="get.central-dir-resources.start" endSnapKey="get.central-dir-resources.stop" category="l1p.directory-gateway.resources.api" metricKey="GetResourceCentralDirTime" doc:name="Metrics Record"/>
		<choice doc:name="check if central-dir /resources is successful">
			<when expression="#[message.inboundProperties.'http.status' == 200]">
				<logger level="INFO"
					message="Success Reponse from central-directory /resources: #[message.payloadAs(java.lang.String)] "
					category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
				<!--<json:json-to-object-transformer returnClass="java.util.List" doc:name="JSON to Object" /> -->
				<json:json-to-object-transformer returnClass="java.lang.Object"
					doc:name="JSON to Object" />
				<expression-transformer
					expression="#[sessionVars.finalResponseMap.put('directory_details',payload); payload]"
					doc:name="Expression" />
				<foreach doc:name="For Each">
					<choice doc:name="Choice">
						<when expression="#[payload.'primary'== true]">
							<set-session-variable value="#[payload.'providerUrl']" variableName="providerUrl"
								doc:name="Session Variable"></set-session-variable>
							<logger level="INFO" message="Preferred provider url: #[payload.'providerUrl'] "
								category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />

							<!-- Calling Payee DFSP API to get receiver details -->
							<logger level="INFO"
								message="Posting request to #[payload.'providerUrl']/receivers/#[sessionVars.receiverID] "
								category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
							<!--<http:outbound-endpoint address="http://#[payload.'providerUrl']/receivers/#[sessionVars.receiverID]"-->
								<!--method="GET" exchange-pattern="request-response" doc:name="Generic">-->
							<!--</http:outbound-endpoint>-->
							<set-variable variableName="dynamicURL" value="#[new URL(payload.providerUrl + '/receivers/' + sessionVars.receiverID)]" doc:name="Variable"/>
							<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.dfsp-payee.start" doc:name="SnapTime"/>
							<http:request config-ref="central-directory-http-config" host="#[flowVars.dynamicURL.getHost()]" port="#[flowVars.dynamicURL.getPort()]" path="#[flowVars.dynamicURL.getPath()]"
										  method="GET" doc:name="HTTP">
								<http:request-builder>
									<http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
								</http:request-builder>
								<http:success-status-code-validator values="200..599" />
							</http:request>
							<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.dfsp-payee.stop" doc:name="SnapTime"/>
							<metrics:time config-ref="metricsConfig" beginSnapKey="get.dfsp-payee.start" endSnapKey="get.dfsp-payee.stop" category="l1p.directory-gateway.resources.api" metricKey="GetDFSPPayeeDetailsTime" doc:name="Metrics Record"/>
							<choice doc:name="check if payee dfsp /receivers is successful">
								<when expression="#[message.inboundProperties.'http.status' == 200]">
									<logger level="INFO"
										message="Success Reponse from payee dfsp /receivers: #[message.payloadAs(java.lang.String)] "
										category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
									<json:json-to-object-transformer returnClass="java.util.Map"
										doc:name="Convert JSON Payload to Map" />
									<expression-transformer
										expression="#[sessionVars.finalResponseMap.put('dfsp_details',payload); payload]"
										doc:name="Expression" />

									<!-- Calling Central Fraud Sharing API -->
									<set-payload
										value="{&quot;identifier&quot;:&quot;#[sessionVars.updatedIdentifier]&quot;}"
										doc:name="Set Payload"></set-payload>
                                    <logger level="INFO"
                                            message="Posting request to http://${central-fraud-sharing-host}:${central-fraud-sharing-api.port}/score/user Payload:#[payload]"
                                            category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
                                    <metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.central-fraud-score.start" doc:name="SnapTime"/>
									<http:request config-ref="central-fraud-sharing-http-config" path="/score/user"
										method="POST" doc:name="HTTP">
										<http:request-builder>
											<http:header headerName="L1p-Trace-Id" value="#[sessionVars.'L1p-Trace-Id']" />
										</http:request-builder>
										<http:success-status-code-validator values="200..599" />
									</http:request>
									<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.central-fraud-score.stop" doc:name="SnapTime"/>
									<metrics:time config-ref="metricsConfig" beginSnapKey="get.central-fraud-score.start" endSnapKey="get.central-fraud-score.stop" category="l1p.directory-gateway.resources.api" metricKey="GetCentralFraudScoreTime" doc:name="Metrics Record"/>
									<choice doc:name="check if central-fraud-share /score/user is successful">
										<when expression="#[message.inboundProperties.'http.status' == 200]">
											<logger level="INFO"
												message="Success Reponse from central-fraud-share /score/user: #[message.payloadAs(java.lang.String)] "
												category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
											<json:json-to-object-transformer returnClass="java.util.Map"
												doc:name="Convert JSON Payload to Map" />
											<expression-transformer
												expression="#[sessionVars.finalResponseMap.put('fraud_details',payload); payload]"
												doc:name="Expression" />
										</when>
										<otherwise>
											<logger level="INFO"
												message="Failure Reponse from central-fraud-sharing /score/user: #[message.payloadAs(java.lang.String)] "
												category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
										</otherwise>
									</choice>
								</when>
								<otherwise>
									<logger level="INFO"
										message="Failure Reponse from payee dfsp /receivers: #[message.payloadAs(java.lang.String)] "
										category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
									<json:json-to-object-transformer returnClass="java.util.Map"
										doc:name="Convert JSON Payload to Map" />
									<expression-transformer
										expression="#[sessionVars.finalResponseMap.put('dfsp_details',payload); payload]"
										doc:name="Expression" />

								</otherwise>
							</choice>
						</when>
						<otherwise>
							<logger level="INFO" message="In Otherwise payload: #[payload] " category="com.l1p.interop.dfsp.central-directory"
								doc:name="logger" />
						</otherwise>
					</choice>
				</foreach>
				<set-payload value="#[sessionVars.finalResponseMap]" doc:name="Set Payload"></set-payload>
				<metrics:snap-time config-ref="metricsConfig" snapTimeKey="get.interop-resources.stop" doc:name="SnapTime"/>
				<metrics:time config-ref="metricsConfig" beginSnapKey="get.interop-resources.start" endSnapKey="get.interop-resources.stop" category="l1p.directory-gateway.resources.api" metricKey="GetResourceProxyTime" doc:name="Metrics Record"/>
			</when>
			<otherwise>
				<logger level="INFO"
					message="Failure Reponse from central-directory /resources: #[message.payloadAs(java.lang.String)] "
					category="com.l1p.interop.dfsp.central-directory" doc:name="logger" />
			</otherwise>
		</choice>
		<json:object-to-json-transformer doc:name="Object to JSON" />
		<logger level="INFO"
			message="Sending response, L1p-Trace-Id=#[sessionVars.'L1p-Trace-Id'] Data:#[payload]" category="com.l1p.interop.dfsp.directory.resources"
			doc:name="logger" />
		<exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy" />
	</flow>

	<catch-exception-strategy name="interop-catch-exception-strategy">
		<set-property propertyName="Content-Type" value="application/json" doc:name="Property - content-type" />
		<set-property propertyName="http.status" value="501" doc:name="Property - http status" />
		<set-session-variable variableName="errorMessageId" value="Transformer Messaging Exception"
			doc:name="set-errorMessageId" />
		<transformer ref="ExceptionTransformer" doc:name="Exception Transformer" />
	</catch-exception-strategy>


</mule>
